/**
 * Base configuration for app, automotive, wear, and all modules.
 */

def SERVER_MAIN_URL_PROD = "\"https://refresh.pocketcasts.com\""
def SERVER_API_URL_PROD = "\"https://api.pocketcasts.com\""
def SERVER_CACHE_URL_PROD = "\"https://cache.pocketcasts.com\""
def SERVER_STATIC_URL_PROD = "\"https://static.pocketcasts.com\""
def SERVER_SHARING_URL_PROD = "\"https://sharing.pocketcasts.com\""
def SERVER_LIST_URL_PROD = "\"https://lists.pocketcasts.com\""
def SERVER_LIST_HOST_PROD = "\"lists.pocketcasts.com\""
def SERVER_SHORT_URL_PROD = "\"https://pca.st\""
def WEB_BASE_HOST_PROD = "\"pocketcasts.com\""

android {
    compileSdkVersion project.compileSdkVersion

    defaultConfig {
        minSdkVersion project.minSdkVersion
        targetSdkVersion project.targetSdkVersion
        versionCode project.versionCode
        versionName project.versionName

        buildConfigField "int", "VERSION_CODE", "${project.versionCode}"
        buildConfigField "String", "VERSION_NAME", "\"${project.versionName}\""
        buildConfigField "String", "SETTINGS_ENCRYPT_SECRET", "\"${project.settingsEncryptSecret}\""
        buildConfigField "String", "SHARING_SERVER_SECRET", "\"${project.sharingServerSecret}\""
        buildConfigField "String", "GOOGLE_SIGN_IN_SERVER_CLIENT_ID", "\"${project.googleSignInServerClientId}\""

        testInstrumentationRunner project.testInstrumentationRunner
        testApplicationId "au.com.shiftyjelly.pocketcasts.test" + project.name.replace("-", "_")
        vectorDrawables.useSupportLibrary = true
    }

    lint {
        abortOnError false
        disable "AppCompatResource", "ContentDescription", "DiffUtilEquals"
        xmlReport true
    }

    compileOptions {
        // Flag to enable support for the new language APIs
        coreLibraryDesugaringEnabled true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
        // disable Kotlin warnings for Coroutines, working with the annotation @OptIn(DelicateCoroutinesApi::class)
        freeCompilerArgs += [
            "-opt-in=kotlin.RequiresOptIn"
        ]
        kotlinOptions.allWarningsAsErrors = true
    }

    composeOptions {
        kotlinCompilerExtensionVersion libs.versions.compose.kotlin.compiler.get()
    }

    testOptions {
        animationsDisabled = true
    }

    packagingOptions {
        resources {
            excludes += [
                "META-INF/rxjava.properties",
                "META-INF/AL2.0",
                "META-INF/LGPL2.1",
                "META-INF/licenses/ASM",
                // Fixes issue running './gradlew connectedDebugAndroidTest' with clashing testing libraries.
                "**/attach_hotspot_windows.dll"
            ]
        }
    }

    ksp {
        arg("skipPrivatePreviews", "true")
    }

    if (project.canSignRelease) {
        signingConfigs {
            release {
                storeFile = project.storeFile
                storePassword = project.storePassword
                keyAlias = project.keyAlias
                keyPassword = project.keyPassword
            }
        }
    }

    buildTypes {
        debug {
            pseudoLocalesEnabled true
            testCoverageEnabled false
            ext.alwaysUpdateBuildId = false

            buildConfigField "String", "SERVER_MAIN_URL", "\"https://refresh.pocketcasts.net\""
            buildConfigField "String", "SERVER_API_URL", "\"https://api.pocketcasts.net\""
            buildConfigField "String", "SERVER_CACHE_URL", "\"https://podcast-api.pocketcasts.net\""
            buildConfigField "String", "SERVER_STATIC_URL", "\"https://static.pocketcasts.net\""
            buildConfigField "String", "SERVER_SHARING_URL", "\"https://sharing.pocketcasts.net\""
            buildConfigField "String", "SERVER_SHORT_URL", "\"https://pcast.pocketcasts.net\""
            buildConfigField "String", "WEB_BASE_HOST", "\"pocket-casts-main-development.mystagingwebsite.com\""
            buildConfigField "String", "SERVER_LIST_URL", "\"https://lists.pocketcasts.net\""
            buildConfigField "String", "SERVER_LIST_HOST", "\"lists.pocketcasts.net\""
        }

        debugProd {
            debuggable true

            testCoverageEnabled false
            ext.alwaysUpdateBuildId = false

            buildConfigField "String", "SERVER_MAIN_URL", SERVER_MAIN_URL_PROD
            buildConfigField "String", "SERVER_API_URL", SERVER_API_URL_PROD
            buildConfigField "String", "SERVER_CACHE_URL", SERVER_CACHE_URL_PROD
            buildConfigField "String", "SERVER_STATIC_URL", SERVER_STATIC_URL_PROD
            buildConfigField "String", "SERVER_SHARING_URL", SERVER_SHARING_URL_PROD
            buildConfigField "String", "SERVER_SHORT_URL", SERVER_SHORT_URL_PROD
            buildConfigField "String", "WEB_BASE_HOST", WEB_BASE_HOST_PROD
            buildConfigField "String", "SERVER_LIST_URL", SERVER_LIST_URL_PROD
            buildConfigField "String", "SERVER_LIST_HOST", SERVER_LIST_HOST_PROD
        }

        release {
            minifyEnabled true
            debuggable false
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "$rootProject.rootDir.absolutePath/app/proguard-rules.pro"

            buildConfigField "String", "SERVER_MAIN_URL", SERVER_MAIN_URL_PROD
            buildConfigField "String", "SERVER_API_URL", SERVER_API_URL_PROD
            buildConfigField "String", "SERVER_CACHE_URL", SERVER_CACHE_URL_PROD
            buildConfigField "String", "SERVER_STATIC_URL", SERVER_STATIC_URL_PROD
            buildConfigField "String", "SERVER_SHARING_URL", SERVER_SHARING_URL_PROD
            buildConfigField "String", "SERVER_SHORT_URL", SERVER_SHORT_URL_PROD
            buildConfigField "String", "WEB_BASE_HOST", WEB_BASE_HOST_PROD
            buildConfigField "String", "SERVER_LIST_URL", SERVER_LIST_URL_PROD
            buildConfigField "String", "SERVER_LIST_HOST", SERVER_LIST_HOST_PROD

            if (project.canSignRelease) {
                signingConfig signingConfigs.release
            }
        }
    }
}

dependencies {
    // Uncomment if you want to run with leak canary
//    debugImplementation libs.leakcanary
//    debugProdImplementation libs.leakcanary

    implementation libs.bundles.accompanist
    implementation libs.bundles.billing
    implementation libs.bundles.coroutines
    implementation libs.bundles.firebase
    implementation libs.bundles.hilt
    implementation libs.bundles.lifecycle
    implementation libs.bundles.lottie
    implementation libs.bundles.media3
    implementation libs.bundles.moshi
    implementation libs.bundles.navigation
    implementation libs.bundles.okhttp
    implementation libs.bundles.paging
    implementation libs.bundles.protobuf
    implementation libs.bundles.retrofit
    implementation libs.bundles.rxjava
    implementation libs.bundles.sentry
    implementation libs.bundles.shared.elements
    implementation libs.bundles.work

    implementation platform(libs.firebase.bom)
    implementation platform(libs.sentry.bom)

    implementation libs.appcompat
    implementation libs.auth
    implementation libs.browser
    implementation libs.browser.helper
    implementation libs.car
    implementation libs.cardview
    implementation libs.cast
    implementation libs.coil
    implementation libs.coil.compose
    implementation libs.bundles.compose
    implementation libs.constraintlayout
    implementation libs.core.ktx
    implementation libs.device.names
    implementation libs.flexbox
    implementation libs.fragment.ktx
    implementation libs.glide
    implementation libs.glide.okhttp
    implementation libs.guava
    implementation libs.material
    implementation libs.material.dialogs
    implementation libs.material.progressbar
    implementation libs.mediarouter
    implementation libs.oss.licenses
    implementation libs.palette
    implementation libs.play.review
    implementation libs.play.services.wearable
    implementation libs.preference
    implementation libs.preference.ktx
    implementation libs.recyclerview
    implementation(libs.retrofit.protobuf) {
        exclude group: "com.google.protobuf", module: "protobuf-java"
    }
    implementation libs.showkase
    implementation libs.swiperefreshlayout
    implementation libs.timber
    implementation libs.viewpager

    ksp libs.moshi.kotlin.codegen
    ksp libs.glide.compiler
    ksp libs.showkase.processor
    // Dagger doesn't support KSP yet https://github.com/google/dagger/issues/2349
    kapt libs.hilt.compiler
    kapt libs.dagger.hilt.compiler

    debugImplementation libs.compose.ui.test.manifest
    debugImplementation libs.compose.ui.tooling
    debugProdImplementation libs.compose.ui.test.manifest
    debugProdImplementation libs.compose.ui.tooling

    androidTestImplementation libs.accessibility.test.framework
    androidTestImplementation libs.annotation
    androidTestImplementation(libs.barista) {
        exclude group: "org.jetbrains.kotlin"
    }
    androidTestImplementation libs.bundles.espresso
    androidTestImplementation libs.bundles.test
    androidTestImplementation libs.compose.ui.test.junit4
    androidTestImplementation libs.jsonassert
    androidTestImplementation libs.mockito.android
    androidTestImplementation libs.mockito.kotlin
    androidTestImplementation libs.navigation.testing
    androidTestImplementation libs.okHttp.mockwebserver
    androidTestImplementation libs.room.testing
    androidTestImplementation libs.uiautomator
    androidTestImplementation libs.work.test

    testImplementation libs.coroutines.test
    testImplementation libs.jsonassert
    testImplementation (libs.junit) {
        exclude group: "org.hamcrest"
    }
    testImplementation libs.mockito.inline
    testImplementation libs.mockito.kotlin
    testImplementation libs.okHttp.mockwebserver
    testImplementation libs.turbine

    coreLibraryDesugaring libs.desugar.jdk
}

// Exclude the Timber integration from the Sentry Android SDK temporarily.
// Exclude the NDK from the Sentry Android SDK as we don't use it and Tracks includes it.
configurations.configureEach {
    exclude group: "io.sentry", module: "sentry-android-timber"
    exclude group: "io.sentry", module: "sentry-android-ndk"
}
