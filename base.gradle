/**
 * Base configuration for app, automotive, wear, and all modules.
 */

def SERVER_MAIN_URL_PROD = "\"https://refresh.pocketcasts.com\""
def SERVER_API_URL_PROD = "\"https://api.pocketcasts.com\""
def SERVER_CACHE_URL_PROD = "\"https://cache.pocketcasts.com\""
def SERVER_STATIC_URL_PROD = "\"https://static.pocketcasts.com\""
def SERVER_SHARING_URL_PROD = "\"https://sharing.pocketcasts.com\""
def SERVER_LIST_URL_PROD = "\"https://lists.pocketcasts.com\""
def SERVER_LIST_HOST_PROD = "\"lists.pocketcasts.com\""
def SERVER_SHORT_URL_PROD = "\"https://pca.st\""
def WEB_BASE_HOST_PROD = "\"pocketcasts.com\""

android {
    compileSdkVersion project.compileSdkVersion

    defaultConfig {
        minSdkVersion project.minSdkVersion
        targetSdkVersion project.targetSdkVersion
        versionCode project.versionCode
        versionName project.versionName

        buildConfigField 'int', 'VERSION_CODE', "${project.versionCode}"
        buildConfigField 'String', 'VERSION_NAME', "\"${project.versionName}\""
        buildConfigField "String", "SETTINGS_ENCRYPT_SECRET", "\"${project.settingsEncryptSecret}\""
        buildConfigField "String", "SHARING_SERVER_SECRET", "\"${project.sharingServerSecret}\""
        buildConfigField "String", "GOOGLE_SIGN_IN_SERVER_CLIENT_ID", "\"${project.googleSignInServerClientId}\""

        testInstrumentationRunner project.testInstrumentationRunner
        testApplicationId "au.com.shiftyjelly.pocketcasts.test" + project.name.replace("-", "_")
        vectorDrawables.useSupportLibrary = true
    }

    lint {
        abortOnError false
        disable 'AppCompatResource', 'ContentDescription', 'DiffUtilEquals'
        xmlReport true
    }

    compileOptions {
        // Flag to enable support for the new language APIs
        coreLibraryDesugaringEnabled true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
        // disable Kotlin warnings for Coroutines, working with the annotation @OptIn(DelicateCoroutinesApi::class)
        freeCompilerArgs += [
            "-opt-in=kotlin.RequiresOptIn"
        ]
        kotlinOptions.allWarningsAsErrors = true
    }

    composeOptions {
        kotlinCompilerExtensionVersion libs.versions.compose.kotlin.compiler.get()
    }

    testOptions {
        animationsDisabled = true
    }

    packagingOptions {
        resources {
            excludes += [
                'META-INF/rxjava.properties',
                'META-INF/AL2.0',
                'META-INF/LGPL2.1',
                'META-INF/licenses/ASM',
                // Fixes issue running './gradlew connectedDebugAndroidTest' with clashing testing libraries.
                '**/attach_hotspot_windows.dll'
            ]
        }
    }

    ksp {
        arg("skipPrivatePreviews", "true")
    }

    if (canSignRelease) {
        signingConfigs {
            release {
                storeFile = project.storeFile
                storePassword = project.storePassword
                keyAlias = project.keyAlias
                keyPassword = project.keyPassword
            }
        }
    }

    buildTypes {
        debug {
            pseudoLocalesEnabled true
            testCoverageEnabled false
            ext.alwaysUpdateBuildId = false

            buildConfigField "String", "SERVER_MAIN_URL", "\"https://refresh.pocketcasts.net\""
            buildConfigField "String", "SERVER_API_URL", "\"https://api.pocketcasts.net\""
            buildConfigField "String", "SERVER_CACHE_URL", "\"https://podcast-api.pocketcasts.net\""
            buildConfigField "String", "SERVER_STATIC_URL", "\"https://static.pocketcasts.net\""
            buildConfigField "String", "SERVER_SHARING_URL", "\"https://sharing.pocketcasts.net\""
            buildConfigField "String", "SERVER_SHORT_URL", "\"https://pcast.pocketcasts.net\""
            buildConfigField "String", "WEB_BASE_HOST", "\"pocket-casts-main-development.mystagingwebsite.com\""
            buildConfigField "String", "SERVER_LIST_URL", "\"https://lists.pocketcasts.net\""
            buildConfigField "String", "SERVER_LIST_HOST", "\"lists.pocketcasts.net\""
        }

        debugProd {
            debuggable true

            testCoverageEnabled false
            ext.alwaysUpdateBuildId = false

            buildConfigField "String", "SERVER_MAIN_URL", SERVER_MAIN_URL_PROD
            buildConfigField "String", "SERVER_API_URL", SERVER_API_URL_PROD
            buildConfigField "String", "SERVER_CACHE_URL", SERVER_CACHE_URL_PROD
            buildConfigField "String", "SERVER_STATIC_URL", SERVER_STATIC_URL_PROD
            buildConfigField "String", "SERVER_SHARING_URL", SERVER_SHARING_URL_PROD
            buildConfigField "String", "SERVER_SHORT_URL", SERVER_SHORT_URL_PROD
            buildConfigField "String", "WEB_BASE_HOST", WEB_BASE_HOST_PROD
            buildConfigField "String", "SERVER_LIST_URL", SERVER_LIST_URL_PROD
            buildConfigField "String", "SERVER_LIST_HOST", SERVER_LIST_HOST_PROD
        }

        release {
            minifyEnabled true
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), "$rootProject.rootDir.absolutePath/app/proguard-rules.pro"

            buildConfigField "String", "SERVER_MAIN_URL", SERVER_MAIN_URL_PROD
            buildConfigField "String", "SERVER_API_URL", SERVER_API_URL_PROD
            buildConfigField "String", "SERVER_CACHE_URL", SERVER_CACHE_URL_PROD
            buildConfigField "String", "SERVER_STATIC_URL", SERVER_STATIC_URL_PROD
            buildConfigField "String", "SERVER_SHARING_URL", SERVER_SHARING_URL_PROD
            buildConfigField "String", "SERVER_SHORT_URL", SERVER_SHORT_URL_PROD
            buildConfigField "String", "WEB_BASE_HOST", WEB_BASE_HOST_PROD
            buildConfigField "String", "SERVER_LIST_URL", SERVER_LIST_URL_PROD
            buildConfigField "String", "SERVER_LIST_HOST", SERVER_LIST_HOST_PROD

            if (canSignRelease) {
                signingConfig signingConfigs.release
            }
        }
    }
}

dependencies {
    // Uncomment if you want to run with leak canary
//    debugImplementation androidLibs.leakCanary
//    debugProdImplementation androidLibs.leakCanary

    implementation androidLibs.appCompat
    implementation androidLibs.auth
    implementation androidLibs.car
    implementation androidLibs.ktx
    implementation androidLibs.ktxFragment
    implementation androidLibs.ktxPreference
    implementation androidLibs.mediarouter
    implementation androidLibs.palette
    implementation androidLibs.recyclerview
    implementation androidLibs.design
    implementation androidLibs.cardview
    implementation androidLibs.preference
    implementation androidLibs.browser
    implementation androidLibs.constraintLayout
    implementation androidLibs.cast
    implementation platform(androidLibs.firebaseBom)
    implementation androidLibs.firebaseAnalytics
    implementation androidLibs.firebaseConfig
    implementation androidLibs.liveDataReactiveStreams
    implementation androidLibs.lifecycleViewModel
    implementation androidLibs.lifecycleScope
    implementation androidLibs.lifecycleScopeCompose
    implementation androidLibs.lifecycleLiveData
    implementation androidLibs.lifecycleProcess
    implementation androidLibs.paging
    implementation androidLibs.pagingRx
    implementation androidLibs.playReview
    implementation androidLibs.workManager
    implementation androidLibs.workManagerRx
    implementation androidLibs.navigationFragment
    implementation androidLibs.navigationUi
    implementation androidLibs.billing
    implementation androidLibs.billingKtx
    implementation androidLibs.openSource
    implementation androidLibs.viewPager
    implementation androidLibs.swipeToRefresh
    implementation androidLibs.browserHelper
    implementation androidLibs.guava
    implementation androidLibs.flexbox
    implementation androidLibs.composeActivity
    implementation androidLibs.composeAnimation
    implementation androidLibs.composeConstraint
    implementation androidLibs.composeIcons
    implementation androidLibs.composeLiveData
    implementation androidLibs.composeMaterial
    implementation androidLibs.composeNavigation
    implementation androidLibs.composeRx
    implementation androidLibs.composeUi
    implementation androidLibs.composeUiToolingPreview
    implementation androidLibs.composeViewModel
    implementation androidLibs.composeUiUtil
    implementation androidLibs.wearPlayServices

    implementation androidLibs.kotlinCoroutines
    implementation androidLibs.kotlinCoroutinesAndroid
    implementation androidLibs.kotlinCoroutinesPlayServices
    implementation androidLibs.kotlinCoroutinesRx
    implementation androidLibs.deviceNames
    implementation androidLibs.glide
    implementation androidLibs.glideOkHttp
    implementation androidLibs.coil
    implementation androidLibs.coilCompose
    implementation androidLibs.okHttp
    implementation androidLibs.okHttpLogging
    implementation androidLibs.rxJava
    implementation androidLibs.rxAndroid
    implementation androidLibs.rxKoltin
    implementation androidLibs.rxRelay
    implementation androidLibs.retrofit
    implementation androidLibs.retrofitMoshi
    implementation(androidLibs.retrofitProtobuf) {
        exclude group: 'com.google.protobuf', module: 'protobuf-java'
    }
    implementation androidLibs.retrofitRxJava
    implementation androidLibs.moshi
    implementation androidLibs.moshiAdapters
    implementation androidLibs.timber
    implementation androidLibs.materialDialog
    implementation androidLibs.lottie
    implementation androidLibs.lottieCompose
    implementation androidLibs.materialProgressBar
    implementation libs.hilt.android
    implementation androidLibs.hiltWorkManager
    implementation androidLibs.hiltNavigationCompose
    implementation androidLibs.accompanistFlowLayout
    implementation androidLibs.accompanistSystemUiController
    implementation platform(androidLibs.sentryBom)
    implementation androidLibs.sentryAndroidCore
    implementation androidLibs.sentryFragment
    implementation androidLibs.sentryTimber
    implementation androidLibs.media3Cast
    implementation androidLibs.media3Datasource
    implementation androidLibs.media3Exoplayer
    implementation androidLibs.media3ExoplayerHls
    implementation androidLibs.media3Extractor
    implementation androidLibs.media3Ui
    implementation androidLibs.showkase
    testImplementation (androidLibs.junit) {
        exclude group: 'org.hamcrest'
    }
    testImplementation androidLibs.kotlinCoroutinesTest
    implementation androidLibs.protobufKotlinLite
    implementation androidLibs.protobufJavaLite

    ksp androidLibs.moshiKotlinCompile
    ksp androidLibs.glideCompile
    ksp androidLibs.showkaseProcessor
    // Dagger doesn't support KSP yet https://github.com/google/dagger/issues/2349
    kapt libs.hilt.compiler
    kapt libs.dagger.hilt.compiler

    debugImplementation androidLibs.composeUiTooling
    debugProdImplementation androidLibs.composeUiTooling
    debugImplementation androidLibs.composeUiTestManifest
    debugProdImplementation androidLibs.composeUiTestManifest

    testImplementation androidLibs.junit
    testImplementation androidLibs.jsonAssert
    testImplementation androidLibs.mockWebServer
    testImplementation androidLibs.testMokitoKotlin
    testImplementation androidLibs.turbine
    testImplementation androidLibs.testMokitoKotlinInline
    testImplementation androidLibs.kotlinCoroutinesTest
    androidTestImplementation androidLibs.jsonAssert
    androidTestImplementation androidLibs.androidTestCore
    androidTestImplementation androidLibs.roomTest
    androidTestImplementation androidLibs.annotations
    androidTestImplementation androidLibs.navigationTest
    androidTestImplementation androidLibs.testRunner
    androidTestImplementation androidLibs.testRules
    androidTestImplementation androidLibs.testEspressoCore
    androidTestImplementation androidLibs.testEspressoContrib
    androidTestImplementation androidLibs.testExpressoWeb
    androidTestImplementation androidLibs.testExpressoIdlingConcurrent
    androidTestImplementation androidLibs.testExpressoIdlingResouce
    androidTestImplementation androidLibs.testUiautomator
    androidTestImplementation androidLibs.workManagerTest
    androidTestImplementation androidLibs.composeUiTestJunit
    androidTestImplementation androidLibs.testMockitoAndroid
    androidTestImplementation androidLibs.testMokitoKotlin
    androidTestImplementation androidLibs.mockWebServer
    androidTestImplementation(androidLibs.barista) {
        exclude group: 'org.jetbrains.kotlin'
    }
    androidTestImplementation androidLibs.accessibilityTestFramework

    coreLibraryDesugaring androidLibs.desugarJdk
}

// Exclude the Timber integration from the Sentry Android SDK temporarily.
// Exclude the NDK from the Sentry Android SDK as we don't use it and Tracks includes it.
configurations.configureEach {
    exclude group: "io.sentry", module: "sentry-android-timber"
    exclude group: "io.sentry", module: "sentry-android-ndk"
}
