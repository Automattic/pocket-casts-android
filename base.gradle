apply plugin: 'kotlin-android'
apply plugin: 'kotlin-parcelize'
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'

def SERVER_MAIN_URL_PROD = "\"https://refresh.pocketcasts.com\""
def SERVER_API_URL_PROD = "\"https://api.pocketcasts.com\""
def SERVER_CACHE_URL_PROD = "\"https://cache.pocketcasts.com\""
def SERVER_STATIC_URL_PROD = "\"https://static.pocketcasts.com\""
def SERVER_SHARING_URL_PROD = "\"https://sharing.pocketcasts.com\""
def SERVER_LIST_URL_PROD = "\"https://lists.pocketcasts.com\""
def SERVER_LIST_HOST_PROD = "\"lists.pocketcasts.com\""
def SERVER_SHORT_URL_PROD = "\"https://pca.st\""
def WEB_BASE_HOST_PROD = "\"pocketcasts.com\""

android {
    compileSdkVersion project.compileSdkVersion

    defaultConfig {
        minSdkVersion project.minSdkVersion
        targetSdkVersion project.targetSdkVersion
        versionCode project.versionCode
        versionName project.versionName

        buildConfigField 'int', 'VERSION_CODE', "${project.versionCode}"
        buildConfigField 'String', 'VERSION_NAME', "\"${project.versionName}\""
        buildConfigField "String", "SETTINGS_ENCRYPT_SECRET", "\"${project.settingsEncryptSecret}\""
        buildConfigField "String", "SHARING_SERVER_SECRET", "\"${project.sharingServerSecret}\""
        buildConfigField "String", "GOOGLE_SIGN_IN_SERVER_CLIENT_ID", "\"${project.googleSignInServerClientId}\""

        // Feature Flags
        buildConfigField "boolean", "END_OF_YEAR_ENABLED", "false"
        buildConfigField "boolean", "SHOW_RATINGS", "false"
        buildConfigField "boolean", "ADD_PATRON_ENABLED", "false"

        testInstrumentationRunner project.testInstrumentationRunner
        testApplicationId "au.com.shiftyjelly.pocketcasts.test" + project.name.replace("-", "_")
        vectorDrawables.useSupportLibrary = true
    }

    lint {
        abortOnError false
        disable 'AppCompatResource', 'ContentDescription', 'DiffUtilEquals'
        xmlReport true
    }

    compileOptions {
        // Flag to enable support for the new language APIs
        coreLibraryDesugaringEnabled true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
        // disable Kotlin warnings for Coroutines, working with the annotation @OptIn(DelicateCoroutinesApi::class)
        freeCompilerArgs += [
            "-opt-in=kotlin.RequiresOptIn"
        ]
        kotlinOptions.allWarningsAsErrors = true
    }

    composeOptions {
        kotlinCompilerExtensionVersion libs.versions.compose.compiler.get()
    }

    testOptions {
        animationsDisabled = true
    }

    packagingOptions {
        resources {
            excludes += [
                'META-INF/rxjava.properties',
                'META-INF/AL2.0',
                'META-INF/LGPL2.1',
                'META-INF/licenses/ASM',
                // Fixes issue running './gradlew connectedDebugAndroidTest' with clashing testing libraries.
                '**/attach_hotspot_windows.dll'
            ]
        }
    }

    if (canSignRelease) {
        signingConfigs {
            release {
                storeFile = project.storeFile
                storePassword = project.storePassword
                keyAlias = project.keyAlias
                keyPassword = project.keyPassword
            }
        }
    }

    buildTypes {
        debug {
            pseudoLocalesEnabled true
            testCoverageEnabled false
            ext.alwaysUpdateBuildId = false

            buildConfigField "String", "SERVER_MAIN_URL", "\"https://refresh.pocketcasts.net\""
            buildConfigField "String", "SERVER_API_URL", "\"https://api.pocketcasts.net\""
            buildConfigField "String", "SERVER_CACHE_URL", "\"https://podcast-api.pocketcasts.net\""
            buildConfigField "String", "SERVER_STATIC_URL", "\"https://static.pocketcasts.net\""
            buildConfigField "String", "SERVER_SHARING_URL", "\"https://sharing.pocketcasts.net\""
            buildConfigField "String", "SERVER_SHORT_URL", "\"https://pcast.pocketcasts.net\""
            buildConfigField "String", "WEB_BASE_HOST", "\"pocket-casts-main-development.mystagingwebsite.com\""
            buildConfigField "String", "SERVER_LIST_URL", "\"https://lists.pocketcasts.net\""
            buildConfigField "String", "SERVER_LIST_HOST", "\"lists.pocketcasts.net\""
        }

        debugProd {
            debuggable true

            testCoverageEnabled false
            ext.alwaysUpdateBuildId = false

            buildConfigField "String", "SERVER_MAIN_URL", SERVER_MAIN_URL_PROD
            buildConfigField "String", "SERVER_API_URL", SERVER_API_URL_PROD
            buildConfigField "String", "SERVER_CACHE_URL", SERVER_CACHE_URL_PROD
            buildConfigField "String", "SERVER_STATIC_URL", SERVER_STATIC_URL_PROD
            buildConfigField "String", "SERVER_SHARING_URL", SERVER_SHARING_URL_PROD
            buildConfigField "String", "SERVER_SHORT_URL", SERVER_SHORT_URL_PROD
            buildConfigField "String", "WEB_BASE_HOST", WEB_BASE_HOST_PROD
            buildConfigField "String", "SERVER_LIST_URL", SERVER_LIST_URL_PROD
            buildConfigField "String", "SERVER_LIST_HOST", SERVER_LIST_HOST_PROD
        }

        release {
            minifyEnabled true
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), "$rootProject.rootDir.absolutePath/app/proguard-rules.pro"

            buildConfigField "String", "SERVER_MAIN_URL", SERVER_MAIN_URL_PROD
            buildConfigField "String", "SERVER_API_URL", SERVER_API_URL_PROD
            buildConfigField "String", "SERVER_CACHE_URL", SERVER_CACHE_URL_PROD
            buildConfigField "String", "SERVER_STATIC_URL", SERVER_STATIC_URL_PROD
            buildConfigField "String", "SERVER_SHARING_URL", SERVER_SHARING_URL_PROD
            buildConfigField "String", "SERVER_SHORT_URL", SERVER_SHORT_URL_PROD
            buildConfigField "String", "WEB_BASE_HOST", WEB_BASE_HOST_PROD
            buildConfigField "String", "SERVER_LIST_URL", SERVER_LIST_URL_PROD
            buildConfigField "String", "SERVER_LIST_HOST", SERVER_LIST_HOST_PROD

            if (canSignRelease) {
                signingConfig signingConfigs.release
            }

        }
    }

}

dependencies {
    // Uncomment if you want to run with leak canary
    //debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.6'

    implementation libs.accompanist.flowlayout
    implementation libs.accompanist.systemuicontroller
    implementation libs.activity.compose
    implementation libs.android.device.names
    implementation libs.androidbrowserhelper
    implementation libs.animation
    implementation libs.appcompat
    implementation libs.billing
    implementation libs.billing.ktx
    implementation libs.browser
    implementation libs.cardview
    implementation libs.coil
    implementation libs.coil.compose
    implementation libs.compose.livedata
    implementation libs.compose.material
    implementation libs.compose.rxjava2
    implementation libs.compose.ui
    implementation libs.compose.ui.tooling.preview
    implementation libs.compose.ui.util
    implementation libs.constraintlayout
    implementation libs.constraintlayout.compose
    implementation libs.core.ktx
    implementation libs.firebase.analytics.ktx
    implementation libs.firebase.config.ktx
    implementation libs.flexbox
    implementation libs.fragment.ktx
    implementation libs.glide
    implementation libs.glide.okhttp3
    implementation libs.guava
    implementation libs.hilt.android
    implementation libs.hilt.navigation.compose
    implementation libs.hilt.work
    implementation libs.kotlin.stdlib.jdk7
    implementation libs.kotlinx.coroutines.android
    implementation libs.kotlinx.coroutines.core
    implementation libs.kotlinx.coroutines.play.services
    implementation libs.kotlinx.coroutines.rx2
    implementation libs.lifecycle.livedata.ktx
    implementation libs.lifecycle.process
    implementation libs.lifecycle.reactivestreams.ktx
    implementation libs.lifecycle.runtime.ktx
    implementation libs.lifecycle.viewmodel.compose
    implementation libs.lifecycle.viewmodel.ktx
    implementation libs.lottie
    implementation libs.lottie.compose
    implementation libs.material
    implementation libs.material.dialogs
    implementation libs.material.icons.extended
    implementation libs.materialprogressbar
    implementation libs.media3.cast
    implementation libs.media3.datasource
    implementation libs.media3.exoplayer
    implementation libs.media3.exoplayer.hls
    implementation libs.media3.extractor
    implementation libs.media3.ui
    implementation libs.mediarouter
    implementation libs.moshi
    implementation libs.moshi.adapters
    implementation libs.navigation.compose
    implementation libs.navigation.fragment.ktx
    implementation libs.navigation.ui.ktx
    implementation libs.okhttp
    implementation libs.okhttp.logging
    implementation libs.paging.runtime
    implementation libs.paging.rxjava2
    implementation libs.palette
    implementation libs.play.services.auth
    implementation libs.play.services.cast.framework
    implementation libs.play.services.oss.licenses
    implementation libs.play.services.wearable
    implementation libs.preference
    implementation libs.preference.ktx
    implementation libs.recyclerview
    implementation libs.retrofit
    implementation libs.retrofit.adapter.rxjava2
    implementation libs.retrofit.converter.moshi
    implementation libs.rxandroid
    implementation libs.rxjava
    implementation libs.rxkoltin
    implementation libs.rxrelay
    implementation libs.sentry.android
    implementation libs.sentry.fragment
    implementation libs.sentry.timber
    implementation libs.swiperefreshlayout
    implementation libs.timber
    implementation libs.viewpager2
    implementation libs.work.runtime.ktx
    implementation libs.work.rxjava2
    implementation platform(libs.firebase.bom)
    implementation platform(libs.sentry.bom)

    kapt libs.glide.compiler
    kapt libs.hilt.compiler
    kapt libs.hilt.dagger.compiler
    kapt libs.moshi.kotlin.codegen

    debugImplementation libs.compose.ui.tooling
    debugProdImplementation libs.compose.ui.tooling
    debugImplementation libs.compose.ui.test.manifest
    debugProdImplementation libs.compose.ui.test.manifest

    testImplementation libs.junit
    testImplementation libs.jsonassert
    testImplementation libs.okhttp.mockwebserver
    testImplementation libs.mockito.kotlin
    testImplementation libs.mockito.inline
    testImplementation libs.kotlinx.coroutines.test
    androidTestImplementation libs.jsonassert
    androidTestImplementation libs.test.core
    androidTestImplementation libs.room.testing
    androidTestImplementation libs.annotation
    androidTestImplementation libs.test.runner
    androidTestImplementation libs.test.rules
    androidTestImplementation libs.espresso.core
    androidTestImplementation libs.espresso.contrib
    androidTestImplementation libs.espresso.web
    androidTestImplementation libs.espresso.idling.concurrent
    androidTestImplementation libs.espresso.idling.resource
    androidTestImplementation libs.test.uiautomator
    androidTestImplementation libs.work.testing
    androidTestImplementation libs.compose.ui.test.junit4
    androidTestImplementation libs.mockito.android
    androidTestImplementation libs.mockito.kotlin
    androidTestImplementation libs.okhttp.mockwebserver
    androidTestImplementation(libs.barista) {
        exclude group: 'org.jetbrains.kotlin'
    }
    androidTestImplementation libs.accessibility.test.framework

    coreLibraryDesugaring libs.desugar.jdk

    constraints {
        // Avoid duplicate class compile failure: https://stackoverflow.com/a/75298544/1910286
        implementation(libs.kotlin.stdlib.jdk8) {
            because("kotlin-stdlib-jdk8 is now a part of kotlin-stdlib")
        }
    }
}
