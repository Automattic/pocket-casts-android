# yaml-language-server: $schema=https://raw.githubusercontent.com/buildkite/pipeline-schema/main/schema.json
---

agents:
  queue: "android"

steps:
  - label: Gradle Wrapper Validation
    command: validate_gradle_wrapper
    agents:
      queue: linter

  # Wait for Gradle Wrapper to be validated before running any other jobs
  - wait

  - group: "Linters"
    steps:
      - label: "‚ò¢Ô∏è Danger - PR Check"
        command: danger
        key: danger
        if: "build.pull_request.id != null"
        retry:
          manual:
            permit_on_passed: true
        agents:
          queue: "linter"

      - label: 'Lint'
        command: ".buildkite/commands/lint.sh"
        plugins: [$CI_TOOLKIT]
        artifact_paths:
          - "**/build/reports/lint-results*.*"

  - label: 'Unit tests'
    command: ".buildkite/commands/run-unit-tests.sh"
    plugins: [$CI_TOOLKIT]

  - group: "Diff Reports"
    steps:
      - label: 'Dependency diff'
        if: build.pull_request.id != null
        command: comment_with_dependency_diff 'app' 'releaseRuntimeClasspath'
        plugins: [$CI_TOOLKIT]
        artifact_paths:
          - "**/build/reports/diff/*"

      - label: "Merged Manifest Diff"
        command: ".buildkite/commands/diff-merged-manifest.sh release"
        if: build.pull_request.id != null
        plugins: [$CI_TOOLKIT]
        artifact_paths:
          - "**/build/reports/diff_manifest/**/**/*"

  - label: 'Spotless formatting check'
    command: |
      echo "--- üîé Checking formatting with Spotless"
      ./gradlew spotlessCheck
    plugins: [$CI_TOOLKIT]

  - label: "Instrumented tests"
    command: ".buildkite/commands/run-instrumented-tests.sh"
    plugins: [$CI_TOOLKIT]
    artifact_paths:
      - "**/build/instrumented-tests/**/*"

  - group: "Assemble release APKs"
    steps:
      - label: "Assemble app release APK"
        command: ".buildkite/commands/assemble-release-apk.sh app"
        plugins: [ $CI_TOOLKIT ]
        artifact_paths:
          - "**/build/outputs/apk/**/*"

      - label: "Assemble automotive release APK"
        command: ".buildkite/commands/assemble-release-apk.sh automotive"
        plugins: [ $CI_TOOLKIT ]
        artifact_paths:
          - "**/build/outputs/apk/**/*"

      - label: "Assemble wear release APK"
        command: ".buildkite/commands/assemble-release-apk.sh wear"
        plugins: [ $CI_TOOLKIT ]
        artifact_paths:
          - "**/build/outputs/apk/**/*"

  - label: "Prototype Builds"
    if: "build.pull_request.id != null"
    command: |
      ".buildkite/commands/prototype-build.sh"
    plugins: [ $CI_TOOLKIT ]
    artifact_paths:
      - "**/build/outputs/apk/**/*"
