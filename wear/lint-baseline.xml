<?xml version="1.0" encoding="UTF-8"?>
<issues format="6" by="lint 8.4.1" type="baseline" client="gradle" dependencies="false" name="AGP (8.4.1)" variant="all" version="8.4.1">

    <issue
        id="DefaultLocale"
        message="Implicitly using the default locale is a common source of bugs: Use `String.format(Locale, ...)` instead"
        errorLine1="                        text = String.format(&quot;%.1fx&quot;, state.playbackEffects.playbackSpeed),"
        errorLine2="                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/kotlin/au/com/shiftyjelly/pocketcasts/wear/ui/player/EffectsScreen.kt"
            line="171"
            column="32"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@com.google.android.horologist.annotations.ExperimentalHorologistApi` or `@OptIn(markerClass = com.google.android.horologist.annotations.ExperimentalHorologistApi.class)`">
        <location
            file="src/main/kotlin/au/com/shiftyjelly/pocketcasts/wear/ui/player/NowPlayingViewModel.kt"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@com.google.android.horologist.annotations.ExperimentalHorologistApi` or `@OptIn(markerClass = com.google.android.horologist.annotations.ExperimentalHorologistApi.class)`">
        <location
            file="src/main/kotlin/au/com/shiftyjelly/pocketcasts/wear/ui/player/NowPlayingViewModel.kt"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@com.google.android.horologist.annotations.ExperimentalHorologistApi` or `@OptIn(markerClass = com.google.android.horologist.annotations.ExperimentalHorologistApi.class)`">
        <location
            file="src/main/kotlin/au/com/shiftyjelly/pocketcasts/wear/ui/player/NowPlayingViewModel.kt"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@com.google.android.horologist.annotations.ExperimentalHorologistApi` or `@OptIn(markerClass = com.google.android.horologist.annotations.ExperimentalHorologistApi.class)`">
        <location
            file="src/main/kotlin/au/com/shiftyjelly/pocketcasts/wear/networking/PocketCastsNetworkingRules.kt"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@com.google.android.horologist.annotations.ExperimentalHorologistApi` or `@OptIn(markerClass = com.google.android.horologist.annotations.ExperimentalHorologistApi.class)`">
        <location
            file="src/main/kotlin/au/com/shiftyjelly/pocketcasts/wear/networking/PocketCastsNetworkingRules.kt"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@com.google.android.horologist.annotations.ExperimentalHorologistApi` or `@OptIn(markerClass = com.google.android.horologist.annotations.ExperimentalHorologistApi.class)`">
        <location
            file="src/main/kotlin/au/com/shiftyjelly/pocketcasts/wear/networking/PocketCastsNetworkingRules.kt"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@com.google.android.horologist.annotations.ExperimentalHorologistApi` or `@OptIn(markerClass = com.google.android.horologist.annotations.ExperimentalHorologistApi.class)`">
        <location
            file="src/main/kotlin/au/com/shiftyjelly/pocketcasts/wear/networking/PocketCastsNetworkingRules.kt"/>
    </issue>

    <issue
        id="ComposableLambdaParameterNaming"
        message="Composable lambda parameter should be named `content`"
        errorLine1="    icon: @Composable () -> Unit = {"
        errorLine2="    ~~~~">
        <location
            file="src/main/kotlin/au/com/shiftyjelly/pocketcasts/wear/ui/component/ErrorScreen.kt"
            line="29"
            column="5"/>
    </issue>

    <issue
        id="ComposableLambdaParameterNaming"
        message="Composable lambda parameter should be named `content`"
        errorLine1="    icon: @Composable () -> Unit = {"
        errorLine2="    ~~~~">
        <location
            file="src/main/kotlin/au/com/shiftyjelly/pocketcasts/wear/ui/component/NotificationScreen.kt"
            line="34"
            column="5"/>
    </issue>

    <issue
        id="ComposableLambdaParameterNaming"
        message="Composable lambda parameter should be named `content`"
        errorLine1="    firstPageContent: @Composable () -> Unit,"
        errorLine2="    ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/kotlin/au/com/shiftyjelly/pocketcasts/wear/ui/component/NowPlayingPager.kt"
            line="44"
            column="5"/>
    </issue>

    <issue
        id="ComposableLambdaParameterNaming"
        message="Composable lambda parameter should be named `content`"
        errorLine1="    progress: @Composable () -> Unit = {},"
        errorLine2="    ~~~~~~~~">
        <location
            file="src/main/kotlin/au/com/shiftyjelly/pocketcasts/wear/ui/component/horologist/PlayPauseButtonStyled.kt"
            line="39"
            column="5"/>
    </issue>

    <issue
        id="ComposableLambdaParameterNaming"
        message="Composable lambda parameter should be named `content`"
        errorLine1="    icon: (@Composable BoxScope.() -> Unit)? = null,"
        errorLine2="    ~~~~">
        <location
            file="src/main/kotlin/au/com/shiftyjelly/pocketcasts/wear/ui/component/WatchListChip.kt"
            line="48"
            column="5"/>
    </issue>

    <issue
        id="ComposableLambdaParameterNaming"
        message="Composable lambda parameter should be named `content`"
        errorLine1="    icon: (@Composable BoxScope.() -> Unit)? = null,"
        errorLine2="    ~~~~">
        <location
            file="src/main/kotlin/au/com/shiftyjelly/pocketcasts/wear/ui/component/WatchListChip.kt"
            line="66"
            column="5"/>
    </issue>

    <issue
        id="ComposableLambdaParameterPosition"
        message="Composable lambda parameter should be the last parameter so it can be used as a trailing lambda"
        errorLine1="    signInSuccessScreen: @Composable (GoogleSignInAccount?) -> Unit,"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/kotlin/au/com/shiftyjelly/pocketcasts/wear/ui/authentication/LoginWithGoogleScreen.kt"
            line="20"
            column="5"/>
    </issue>

    <issue
        id="ComposableLambdaParameterPosition"
        message="Composable lambda parameter should be the last parameter so it can be used as a trailing lambda"
        errorLine1="    icon: (@Composable BoxScope.() -> Unit)? = null,"
        errorLine2="    ~~~~">
        <location
            file="src/main/kotlin/au/com/shiftyjelly/pocketcasts/wear/ui/component/WatchListChip.kt"
            line="48"
            column="5"/>
    </issue>

    <issue
        id="ComposableLambdaParameterPosition"
        message="Composable lambda parameter should be the last parameter so it can be used as a trailing lambda"
        errorLine1="    icon: (@Composable BoxScope.() -> Unit)? = null,"
        errorLine2="    ~~~~">
        <location
            file="src/main/kotlin/au/com/shiftyjelly/pocketcasts/wear/ui/component/WatchListChip.kt"
            line="66"
            column="5"/>
    </issue>

    <issue
        id="ComposableNaming"
        message="Composable functions that return Unit should start with an uppercase letter"
        errorLine1="    fun handle("
        errorLine2="        ~~~~~~">
        <location
            file="src/main/kotlin/au/com/shiftyjelly/pocketcasts/wear/ui/ScrollToTop.kt"
            line="14"
            column="9"/>
    </issue>

    <issue
        id="ComposableNaming"
        message="Composable functions with a return type should start with a lowercase letter"
        errorLine1="private fun RotationAnimation(state: RefreshState?, durationMillis: Int): Animatable&lt;Float, AnimationVector1D> {"
        errorLine2="            ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/kotlin/au/com/shiftyjelly/pocketcasts/wear/ui/settings/SettingsScreen.kt"
            line="194"
            column="13"/>
    </issue>

    <issue
        id="ModifierParameter"
        message="Modifier parameter should be the first optional parameter"
        errorLine1="    modifier: Modifier = Modifier,"
        errorLine2="    ~~~~~~~~">
        <location
            file="src/main/kotlin/au/com/shiftyjelly/pocketcasts/wear/ui/component/horologist/ControlButtonLayoutStyled.kt"
            line="21"
            column="5"/>
    </issue>

    <issue
        id="ExportedService"
        message="Exported service does not require permission"
        errorLine1="        &lt;service"
        errorLine2="         ~~~~~~~">
        <location
            file="src/main/AndroidManifest.xml"
            line="66"
            column="10"/>
    </issue>

    <issue
        id="AutoboxingStateCreation"
        message="Prefer `mutableIntStateOf` instead of `mutableStateOf`"
        errorLine1="    var lastCharIndex by remember { mutableStateOf(0) }"
        errorLine2="                                    ~~~~~~~~~~~~~~">
        <location
            file="src/main/kotlin/au/com/shiftyjelly/pocketcasts/wear/ui/component/ExpandableText.kt"
            line="39"
            column="37"/>
    </issue>

    <issue
        id="AutoboxingStateCreation"
        message="Prefer `mutableFloatStateOf` instead of `mutableStateOf`"
        errorLine1="    private val actual = mutableStateOf(initial)"
        errorLine2="                         ~~~~~~~~~~~~~~">
        <location
            file="src/main/kotlin/au/com/shiftyjelly/pocketcasts/wear/ui/component/horologist/ProgressStateHolderStyled.kt"
            line="31"
            column="26"/>
    </issue>

    <issue
        id="WearRecents"
        message="Set `taskAffinity` for Wear activities to make them appear correctly in recents"
        errorLine1="        &lt;activity"
        errorLine2="        ^">
        <location
            file="src/main/AndroidManifest.xml"
            line="42"
            column="9"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Should explicitly declare type here since implicit type does not specify nullness (Flow&lt;(List&lt;UserEpisode>..List&lt;UserEpisode>?)>)"
        errorLine1="    val userEpisodes = userEpisodeManager"
        errorLine2="        ~~~~~~~~~~~~">
        <location
            file="src/main/kotlin/au/com/shiftyjelly/pocketcasts/wear/ui/FilesViewModel.kt"
            line="16"
            column="9"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Should explicitly declare type here since implicit type does not specify nullness (StateFlow&lt;(Any..Any?)>)"
        errorLine1="    val uiState = playlistManager.observeByUuidAsList(filterUuid)"
        errorLine2="        ~~~~~~~">
        <location
            file="src/main/kotlin/au/com/shiftyjelly/pocketcasts/wear/ui/filter/FilterViewModel.kt"
            line="43"
            column="9"/>
    </issue>

</issues>
