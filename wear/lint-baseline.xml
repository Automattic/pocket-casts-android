<?xml version="1.0" encoding="UTF-8"?>
<issues format="6" by="lint 8.11.1" type="baseline" client="gradle" dependencies="false" name="AGP (8.11.1)" variant="all" version="8.11.1">

    <issue
        id="DoNotMockDataClass"
        message="&apos;com.google.android.horologist.networks.data.Networks&apos; is a data class, so mocking it should not be necessary"
        errorLine1="    private fun mockNetworksWithTypes(networkTypes: List&lt;NetworkType>): Networks = mock&lt;Networks>().apply {"
        errorLine2="                                                                                   ~~~~~~~~~~~~~~~~">
        <location
            file="src/test/kotlin/au/com/shiftyjelly/pocketcasts/wear/networking/PocketCastsNetworkingRulesTest.kt"
            line="145"
            column="84"/>
    </issue>

    <issue
        id="DoNotMockDataClass"
        message="&apos;com.google.android.horologist.networks.data.NetworkStatus&apos; is a data class, so mocking it should not be necessary"
        errorLine1="    private fun mockNetworkStatus(networkType: NetworkType): NetworkStatus = mock&lt;NetworkStatus>().apply {"
        errorLine2="                                                                             ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/test/kotlin/au/com/shiftyjelly/pocketcasts/wear/networking/PocketCastsNetworkingRulesTest.kt"
            line="150"
            column="78"/>
    </issue>

    <issue
        id="DoNotMockDataClass"
        message="&apos;com.google.android.horologist.networks.data.NetworkStatus&apos; is a data class, so mocking it should not be necessary"
        errorLine1="                val networkStatus = mock&lt;NetworkStatus>()"
        errorLine2="                                    ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/test/kotlin/au/com/shiftyjelly/pocketcasts/wear/networking/PocketCastsNetworkingRulesTest.kt"
            line="169"
            column="37"/>
    </issue>

    <issue
        id="DoNotMockSealedClass"
        message="&apos;com.google.android.horologist.networks.data.NetworkInfo&apos; is a sealed type and has a restricted type hierarchy, use a subtype instead."
        errorLine1="    private fun mockNetworkInfo(networkType: NetworkType): NetworkInfo = mock&lt;NetworkInfo>().apply {"
        errorLine2="                                                                         ~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/test/kotlin/au/com/shiftyjelly/pocketcasts/wear/networking/PocketCastsNetworkingRulesTest.kt"
            line="155"
            column="74"/>
    </issue>

    <issue
        id="DoNotMockSealedClass"
        message="&apos;com.google.android.horologist.networks.data.NetworkInfo&apos; is a sealed type and has a restricted type hierarchy, use a subtype instead."
        errorLine1="                val networkInfo = mock&lt;NetworkInfo>()"
        errorLine2="                                  ~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/test/kotlin/au/com/shiftyjelly/pocketcasts/wear/networking/PocketCastsNetworkingRulesTest.kt"
            line="167"
            column="35"/>
    </issue>

</issues>
