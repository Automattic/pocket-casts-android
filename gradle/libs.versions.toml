# Upgrade Guide
# -------------
# 1. Check the Compose Compiler and Kotlin versions are compatible.
#    https://developer.android.com/jetpack/androidx/releases/compose-kotlin
#    compose-kotlin-compiler = Compose Compiler Version (can be found in composeOptions -> kotlinCompilerExtensionVersion)
#    kotlin = Kotlin Version
#
# 2. Check the Kotlin and KSP versions are compatible.
#    https://github.com/google/ksp/releases
#    kotlin = Kotlin Version
#    ksp = KSP (Kotlin Symbol Processing) Version
#
# 3. Check the Wear Compose and Horologist versions are compatible.
#    https://github.com/google/horologist/blob/main/gradle/libs.versions.toml
#    wear-compose = Wear Compose Version
#    horologist = Horologist Version
#
# 4. Check the Compose and Accompanist versions are compatible.
#    https://github.com/google/accompanist
#    compose = Compose Version
#    accompanist = Accompanist Version

[versions]
aboutlibraries = "10.5.0"
accompanist = "0.30.1"
# Android Gradle Plugin - https://developer.android.com/studio/releases/gradle-plugin
android-application = "8.1.0"
billing = "6.0.1"
coil = "2.2.1"
compose = "1.4.2"
# @keep
compose-kotlin-compiler = "1.3.0"
coroutines = "1.6.4"
espresso = "3.4.0"
firebase = "30.5.0"
glide = "4.13.2"
google-services = "4.3.14"
hilt = "2.43.2"
hilt-compiler = "1.0.0"
horologist = "0.4.10"
kotlin = "1.7.10"
kotlin-coroutines = "1.6.4"
ksp = "1.7.10-1.0.6"
lifecycle = "2.6.0"
lottie = "5.2.0"
media3 = "1.0.0"
mockito = "4.0.0"
mockito-android = "4.6.1"
moshi = "1.13.0"
navigation = "2.5.1"
okhttp = "4.9.3"
paging = "3.1.1"
protobuf = "3.23.4"
retrofit = "2.9.0"
room = "2.5.1"
sentry = "6.28.0"
sentry-plugin = "3.10.0"
showkase = "1.0.2"
test = "1.5.0"
wear-compose = "1.2.0-beta02"
work = "2.8.1"

[libraries]
# About Libraries
aboutLibraries-compose = "com.mikepenz:aboutlibraries-compose:10.5.0"
aboutlibraries-core = { module = "com.mikepenz:aboutlibraries-core", version.ref = "aboutlibraries" }

# Accompanist
accompanist-flowlayout = { module = "com.google.accompanist:accompanist-flowlayout", version.ref = "accompanist" }
accompanist-systemuicontroller = { module = "com.google.accompanist:accompanist-systemuicontroller", version.ref = "accompanist" }

# Billing
billing = { module = "com.android.billingclient:billing", version.ref = "billing" }
billing-ktx = { module = "com.android.billingclient:billing-ktx", version.ref = "billing" }

# Coil
coil = { module = "io.coil-kt:coil", version.ref = "coil" }
coil-compose = { module = "io.coil-kt:coil-compose", version.ref = "coil" }

# Compose
compose-animation = { module = "androidx.compose.animation:animation", version.ref = "compose" }
compose-icons = { module = "androidx.compose.material:material-icons-extended", version.ref = "compose" }
compose-livedata = { module = "androidx.compose.runtime:runtime-livedata", version.ref = "compose" }
compose-material = { module = "androidx.compose.material:material", version.ref = "compose" }
compose-rxjava2 = { module = "androidx.compose.runtime:runtime-rxjava2", version.ref = "compose" }
compose-ui = { module = "androidx.compose.ui:ui", version.ref = "compose" }
compose-ui-test-junit4 = { module = "androidx.compose.ui:ui-test-junit4", version.ref = "compose" }
compose-ui-test-manifest = { module = "androidx.compose.ui:ui-test-manifest", version.ref = "compose" }
compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose" }
compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "compose" }
compose-ui-util = { module = "androidx.compose.ui:ui-util", version.ref = "compose" }
compose-activity = "androidx.activity:activity-compose:1.5.1"
compose-constraint = "androidx.constraintlayout:constraintlayout-compose:1.0.1"

# Coroutines
coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlin-coroutines" }
coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlin-coroutines" }
coroutines-play-services = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-play-services", version.ref = "kotlin-coroutines" }
coroutines-rx2 = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-rx2", version.ref = "kotlin-coroutines" }
coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlin-coroutines" }

# Dagger / Hilt
dagger-hilt-compiler = { module = "com.google.dagger:hilt-compiler", version.ref = "hilt" }
hilt-android = { module = "com.google.dagger:hilt-android", version.ref = "hilt" }
hilt-compiler = { module = "androidx.hilt:hilt-compiler", version.ref = "hilt-compiler" }
hilt-navigation-compose = "androidx.hilt:hilt-navigation-compose:1.0.0"
hilt-work = "androidx.hilt:hilt-work:1.0.0"

# Espresso
espresso-core = { module = "androidx.test.espresso:espresso-core", version.ref = "espresso" }
espresso-contrib = { module = "androidx.test.espresso:espresso-contrib", version.ref = "espresso" }
espresso-web = { module = "androidx.test.espresso:espresso-web", version.ref = "espresso" }
espresso-idling-concurrent = { module = "androidx.test.espresso.idling:idling-concurrent", version.ref = "espresso" }
espresso-idling-resource = { module = "androidx.test.espresso:espresso-idling-resource", version.ref = "espresso" }

# Firebase
firebase-bom = { module = "com.google.firebase:firebase-bom", version.ref = "firebase" }
firebase-analytics = { module = "com.google.firebase:firebase-analytics-ktx" }
firebase-config = { module = "com.google.firebase:firebase-config-ktx" }

# Glide
glide = { module = "com.github.bumptech.glide:glide", version.ref = "glide" }
glide-compiler = { module = "com.github.bumptech.glide:compiler", version.ref = "glide" }
glide-okhttp = { module = "com.github.bumptech.glide:okhttp3-integration", version.ref = "glide" }

# Google Play Services OSS Licenses - (The following line is still needed as there is no plugin marker available as of yet)
ossLicenses-plugin = "com.google.android.gms:oss-licenses-plugin:0.10.5"

# Horologist
horologist-audio-ui = { module = "com.google.android.horologist:horologist-audio-ui", version.ref = "horologist"}
horologist-auth-composables = { module = "com.google.android.horologist:horologist-auth-composables", version.ref = "horologist"}
horologist-auth-data = { module = "com.google.android.horologist:horologist-auth-data", version.ref = "horologist"}
horologist-auth-data-phone = { module = "com.google.android.horologist:horologist-auth-data-phone", version.ref = "horologist"}
horologist-auth-ui = { module = "com.google.android.horologist:horologist-auth-ui", version.ref = "horologist"}
horologist-compose-layout = { module = "com.google.android.horologist:horologist-compose-layout", version.ref = "horologist"}
horologist-compose-material = { module = "com.google.android.horologist:horologist-compose-material", version.ref = "horologist"}
horologist-datalayer = { module = "com.google.android.horologist:horologist-datalayer", version.ref = "horologist"}
horologist-media = { module = "com.google.android.horologist:horologist-media", version.ref = "horologist"}
horologist-media-data = { module = "com.google.android.horologist:horologist-media-data", version.ref = "horologist"}
horologist-media-ui = { module = "com.google.android.horologist:horologist-media-ui", version.ref = "horologist"}
horologist-media3-backend = { module = "com.google.android.horologist:horologist-media3-backend", version.ref = "horologist"}
horologist-metwork-awarness-okhttp = { module = "com.google.android.horologist:horologist-network-awareness-okhttp", version.ref = "horologist"}

# Lifecycle
lifecycle-livedata = { module = "androidx.lifecycle:lifecycle-livedata-ktx", version.ref = "lifecycle" }
lifecycle-process = { module = "androidx.lifecycle:lifecycle-process", version.ref = "lifecycle" }
lifecycle-reactivestreams = { module = "androidx.lifecycle:lifecycle-reactivestreams-ktx", version.ref = "lifecycle" }
lifecycle-runtime = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "lifecycle" }
lifecycle-runtime-compose = { module = "androidx.lifecycle:lifecycle-runtime-compose", version.ref = "lifecycle" }
lifecycle-viewmodel = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "lifecycle" }
lifecycle-viewmodel-compose = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "lifecycle" }

# Lottie
lottie = { module = "com.airbnb.android:lottie", version.ref = "lottie" }
lottie-compose = { module = "com.airbnb.android:lottie-compose", version.ref = "lottie" }

# Media3
media3-cast = { module = "androidx.media3:media3-cast", version.ref = "media3" }
media3-datasource = { module = "androidx.media3:media3-datasource", version.ref = "media3" }
media3-datasource-okhttp = { module = "androidx.media3:media3-datasource-okhttp", version.ref = "media3" }
media3-exoplayer = { module = "androidx.media3:media3-exoplayer", version.ref = "media3" }
media3-exoplayer-hls = { module = "androidx.media3:media3-exoplayer-hls", version.ref = "media3" }
media3-extractor= { module = "androidx.media3:media3-extractor", version.ref = "media3" }
media3-ui = { module = "androidx.media3:media3-ui", version.ref = "media3" }

# Mockito
mockito-android = { module = "org.mockito:mockito-android", version.ref = "mockito-android" }
mockito-inline = { module = "org.mockito:mockito-inline", version.ref = "mockito" }
mockito-kotlin = { module = "org.mockito.kotlin:mockito-kotlin", version.ref = "mockito" }

# Moshi
moshi = { module = "com.squareup.moshi:moshi", version.ref = "moshi" }
moshi-adapters = { module = "com.squareup.moshi:moshi-adapters", version.ref = "moshi" }
moshi-kotlin-codegen = { module = "com.squareup.moshi:moshi-kotlin-codegen", version.ref = "moshi" }

# Navigation
navigation-compose = { module = "androidx.navigation:navigation-compose", version.ref = "navigation" }
navigation-fragment = { module = "androidx.navigation:navigation-fragment-ktx", version.ref = "navigation" }
navigation-testing = { module = "androidx.navigation:navigation-testing", version.ref = "navigation" }
navigation-ui = { module = "androidx.navigation:navigation-ui-ktx", version.ref = "navigation" }

# OkHttp
okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
okHttp-logging = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okhttp" }
okHttp-mockwebserver = { module = "com.squareup.okhttp3:mockwebserver", version.ref = "okhttp" }

# Paging
paging-runtime = { module = "androidx.paging:paging-runtime", version.ref = "paging" }
paging-rxjava2 = { module = "androidx.paging:paging-rxjava2", version.ref = "paging" }

# Protobuf
# For Android users, it's recommended to use protobuf Java Lite runtime because of its smaller code size.
# Java Lite runtime also works better with Proguard because it doesn't rely on Java reflection and is optimized
# to allow as much code stripping as possible.
protobuf-javalite = { module = "com.google.protobuf:protobuf-javalite", version.ref = "protobuf" }
protobuf-kotlin-lite = { module = "com.google.protobuf:protobuf-kotlin-lite", version.ref = "protobuf" }

# Retrofit
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
retrofit-moshi = { module = "com.squareup.retrofit2:converter-moshi", version.ref = "retrofit" }
retrofit-protobuf = { module = "com.squareup.retrofit2:converter-protobuf", version.ref = "retrofit" }
retrofit-rxjava2 = { module = "com.squareup.retrofit2:adapter-rxjava2", version.ref = "retrofit" }

# Room
room-compiler = { module = "androidx.room:room-compiler", version.ref = "room" }
room-ktx = { module = "androidx.room:room-ktx", version.ref = "room" }
room-rxjava2 = { module = "androidx.room:room-rxjava2", version.ref = "room" }
room-testing = { module = "androidx.room:room-testing", version.ref = "room" }

# RxJava
rxandroid = "io.reactivex.rxjava2:rxandroid:2.1.1"
rxjava = "io.reactivex.rxjava2:rxjava:2.2.21"
rxkotlin = "io.reactivex.rxjava2:rxkotlin:2.4.0"
rxrelay = "com.jakewharton.rxrelay2:rxrelay:2.1.1"

# Sentry
sentry-bom = { module = "io.sentry:sentry-bom", version.ref = "sentry" }
sentry-android-core = { module = "io.sentry:sentry-android-core" }
sentry-fragment = { module = "io.sentry:sentry-android-fragment" }
sentry-timber = { module = "io.sentry:sentry-android-timber" }

# Showkase
showkase = { module = "com.airbnb.android:showkase", version.ref = "showkase" }
showkase-processor = { module = "com.airbnb.android:showkase-processor", version.ref = "showkase" }

# Test
test-core = { module = "androidx.test:core", version.ref = "test" }
test-rules = { module = "androidx.test:rules", version.ref = "test" }
test-runner = { module = "androidx.test:runner", version.ref = "test" }

# Wear Compose
wear-compose-material = { module = "androidx.wear.compose:compose-material", version.ref = "wear-compose" }
wear-compose-foundation = { module = "androidx.wear.compose:compose-foundation", version.ref = "wear-compose" }
wear-compose-navigation = { module = "androidx.wear.compose:compose-navigation", version.ref = "wear-compose" }

# Work Manager
work-runtime = { module = "androidx.work:work-runtime-ktx", version.ref = "work" }
work-rxjava2 = { module = "androidx.work:work-rxjava2", version.ref = "work" }
work-test = { module = "androidx.work:work-testing", version.ref = "work" }

# Other dependencies

accessibility-test-framework = "com.google.android.apps.common.testing.accessibility.framework:accessibility-test-framework:4.0.0" # Fixes instrumentation tests, see: https://github.com/android/android-test/issues/861#issuecomment-1180219978
annotation = "androidx.annotation:annotation:1.3.0"
appcompat = "androidx.appcompat:appcompat:1.5.0"
arch-core = "androidx.arch.core:core-testing:2.2.0"
auth = "com.google.android.gms:play-services-auth:20.4.0"
automattic-tracks = "com.automattic:Automattic-Tracks-Android:trunk-b3655d42123501a1d9a304789b738610ab4403c8"
barista = "com.adevinta.android:barista:4.2.0"
browser = "androidx.browser:browser:1.4.0"
browser-helper = "com.google.androidbrowserhelper:androidbrowserhelper:2.3.0"
car = "androidx.car.app:app:1.2.0"
cardview = "androidx.cardview:cardview:1.0.0"
cast = "com.google.android.gms:play-services-cast-framework:21.2.0"
constraintlayout = "androidx.constraintlayout:constraintlayout:2.1.4"
core-ktx = "androidx.core:core-ktx:1.10.1"
desugar-jdk = "com.android.tools:desugar_jdk_libs:1.1.5"
device-names = "com.jaredrummler:android-device-names:2.1.0"
flexbox = "com.google.android.flexbox:flexbox:3.0.0"
fragment-ktx = "androidx.fragment:fragment-ktx:1.5.2"
guava = "com.google.guava:guava:27.1-android" # Required to fix conflict between versions in exoplayer and workmanager
jsonassert = "org.skyscreamer:jsonassert:1.5.0"
junit = "junit:junit:4.13.2"
junit-ext = "androidx.test.ext:junit:1.1.3"
leakcanary = "com.squareup.leakcanary:leakcanary-android:2.10"
material = "com.google.android.material:material:1.9.0"
material-dialogs = "com.afollestad.material-dialogs:core:3.3.0"
material-progressbar = "me.zhanghai.android.materialprogressbar:library:1.6.1"
mediarouter = "androidx.mediarouter:mediarouter:1.3.1"
oss-licenses = "com.google.android.gms:play-services-oss-licenses:17.0.0"
palette = "androidx.palette:palette:1.0.0"
play-review = "com.google.android.play:review-ktx:2.0.1"
play-services-wearable = "com.google.android.gms:play-services-wearable:18.0.0"
preference = "androidx.preference:preference:1.2.0"
preference-ktx = "androidx.preference:preference-ktx:1.2.0"
recyclerview = "androidx.recyclerview:recyclerview:1.3.0"
swiperefreshlayout = "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0"
timber = "com.jakewharton.timber:timber:5.0.1"
turbine = "app.cash.turbine:turbine:0.12.1"
uiautomator = "androidx.test.uiautomator:uiautomator:2.2.0"
viewpager = "androidx.viewpager2:viewpager2:1.0.0"
wear-input = "androidx.wear:wear-input:1.2.0-alpha02"
wear-remote-interactions = "androidx.wear:wear-remote-interactions:1.0.0"

[bundles]
aboutlibraries = [
    "aboutlibraries-core",
    "aboutLibraries-compose"
]

accompanist = [
    "accompanist-flowlayout",
    "accompanist-systemuicontroller"
]

billing = [
    "billing",
    "billing-ktx"
]

compose = [
    "compose-activity",
    "compose-animation",
    "compose-constraint",
    "compose-icons",
    "compose-livedata",
    "compose-material",
    "compose-rxjava2",
    "compose-ui",
    "compose-ui-tooling-preview",
    "compose-ui-util"
]

coroutines = [
    "coroutines-core",
    "coroutines-android",
    "coroutines-play-services",
    "coroutines-rx2"
]

espresso = [
    "espresso-core",
    "espresso-contrib",
    "espresso-web",
    "espresso-idling-concurrent",
    "espresso-idling-resource"
]

firebase = [
    "firebase-bom",
    "firebase-analytics",
    "firebase-config"
]

hilt = [
    "hilt-android",
    "hilt-navigation-compose",
    "hilt-work"
]

horologist = [
    "horologist-audio-ui",
    "horologist-auth-composables",
    "horologist-auth-data",
    "horologist-auth-ui",
    "horologist-compose-layout",
    "horologist-compose-material",
    "horologist-datalayer",
    "horologist-media",
    "horologist-media-data",
    "horologist-media-ui",
    "horologist-media3-backend",
    "horologist-metwork-awarness-okhttp"
]

lifecycle = [
    "lifecycle-livedata",
    "lifecycle-process",
    "lifecycle-reactivestreams",
    "lifecycle-runtime",
    "lifecycle-runtime-compose",
    "lifecycle-viewmodel",
    "lifecycle-viewmodel-compose"
]

lottie = [
    "lottie",
    "lottie-compose"
]

media3 = [
    "media3-cast",
    "media3-datasource",
    "media3-exoplayer",
    "media3-exoplayer-hls",
    "media3-extractor",
    "media3-ui"
]

moshi = [
    "moshi",
    "moshi-adapters"
]

navigation = [
    "navigation-fragment",
    "navigation-ui",
    "navigation-compose"
]

okhttp = [
    "okhttp",
    "okHttp-logging"
]

paging = [
    "paging-runtime",
    "paging-rxjava2"
]

protobuf = [
    "protobuf-kotlin-lite",
    "protobuf-javalite"
]

retrofit = [
    "retrofit",
    "retrofit-moshi",
    "retrofit-rxjava2"
]

room = [
    "room-ktx",
    "room-rxjava2"
]

rxjava = [
    "rxandroid",
    "rxjava",
    "rxrelay",
    "rxkotlin"
]

sentry = [
    "sentry-android-core",
    "sentry-fragment",
    "sentry-timber"
]

test = [
    "test-core",
    "test-runner",
    "test-rules"
]

wear-compose = [
    "wear-compose-material",
    "wear-compose-foundation",
    "wear-compose-navigation"
]

work = [
    "work-runtime",
    "work-rxjava2"
]

[plugins]
aboutlibraries = "com.mikepenz.aboutlibraries.plugin:10.4.0"
android-application = { id = "com.android.application", version.ref = "android-application" }
android-library = { id = "com.android.library", version.ref = "android-application" }
google-services = { id = "com.google.gms.google-services", version.ref = "google-services" }
hilt = { id = "com.google.dagger.hilt.android", version.ref = "hilt" }
kapt = { id = "org.jetbrains.kotlin.kapt", version.ref = "kotlin" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-parcelize = { id = "org.jetbrains.kotlin.plugin.parcelize", version.ref = "kotlin" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
sentry = { id = "io.sentry.android.gradle", version.ref = "sentry-plugin" }
spotless = "com.diffplug.spotless:6.2.2"
