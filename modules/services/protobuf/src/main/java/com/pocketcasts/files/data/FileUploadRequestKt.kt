// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: files.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package com.pocketcasts.files.data

@kotlin.jvm.JvmName("-initializefileUploadRequest")
public inline fun fileUploadRequest(block: com.pocketcasts.files.data.FileUploadRequestKt.Dsl.() -> kotlin.Unit): com.pocketcasts.files.data.FileUploadRequest =
    com.pocketcasts.files.data.FileUploadRequestKt.Dsl._create(com.pocketcasts.files.data.FileUploadRequest.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `files.FileUploadRequest`
 */
public object FileUploadRequestKt {
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @com.google.protobuf.kotlin.ProtoDslMarker
    public class Dsl private constructor(
        private val _builder: com.pocketcasts.files.data.FileUploadRequest.Builder
    ) {
        public companion object {
            @kotlin.jvm.JvmSynthetic
            @kotlin.PublishedApi
            internal fun _create(builder: com.pocketcasts.files.data.FileUploadRequest.Builder): Dsl = Dsl(builder)
        }

        @kotlin.jvm.JvmSynthetic
        @kotlin.PublishedApi
        internal fun _build(): com.pocketcasts.files.data.FileUploadRequest = _builder.build()

        /**
         * `string uuid = 1;`
         */
        public var uuid: kotlin.String
            @JvmName("getUuid")
            get() = _builder.getUuid()
            @JvmName("setUuid")
            set(value) {
                _builder.setUuid(value)
            }
        /**
         * `string uuid = 1;`
         */
        public fun clearUuid() {
            _builder.clearUuid()
        }

        /**
         * `string title = 2;`
         */
        public var title: kotlin.String
            @JvmName("getTitle")
            get() = _builder.getTitle()
            @JvmName("setTitle")
            set(value) {
                _builder.setTitle(value)
            }
        /**
         * `string title = 2;`
         */
        public fun clearTitle() {
            _builder.clearTitle()
        }

        /**
         * <code>int64 size = 3;</code>
         */
        public var size: kotlin.Long
            @JvmName("getSize")
            get() = _builder.getSize()
            @JvmName("setSize")
            set(value) {
                _builder.setSize(value)
            }
        /**
         * `int64 size = 3;`
         */
        public fun clearSize() {
            _builder.clearSize()
        }

        /**
         * `string contentType = 4;`
         */
        public var contentType: kotlin.String
            @JvmName("getContentType")
            get() = _builder.getContentType()
            @JvmName("setContentType")
            set(value) {
                _builder.setContentType(value)
            }
        /**
         * `string contentType = 4;`
         */
        public fun clearContentType() {
            _builder.clearContentType()
        }

        /**
         * <code>int64 duration = 5;</code>
         */
        public var duration: kotlin.Long
            @JvmName("getDuration")
            get() = _builder.getDuration()
            @JvmName("setDuration")
            set(value) {
                _builder.setDuration(value)
            }
        /**
         * `int64 duration = 5;`
         */
        public fun clearDuration() {
            _builder.clearDuration()
        }

        /**
         * `.google.protobuf.Int32Value colour = 6;`
         */
        public var colour: com.google.protobuf.Int32Value
            @JvmName("getColour")
            get() = _builder.getColour()
            @JvmName("setColour")
            set(value) {
                _builder.setColour(value)
            }
        /**
         * `.google.protobuf.Int32Value colour = 6;`
         */
        public fun clearColour() {
            _builder.clearColour()
        }
        /**
         * `.google.protobuf.Int32Value colour = 6;`
         * @return Whether the colour field is set.
         */
        public fun hasColour(): kotlin.Boolean {
            return _builder.hasColour()
        }

        /**
         * <code>bool hasCustomImage = 7;</code>
         */
        public var hasCustomImage: kotlin.Boolean
            @JvmName("getHasCustomImage")
            get() = _builder.getHasCustomImage()
            @JvmName("setHasCustomImage")
            set(value) {
                _builder.setHasCustomImage(value)
            }
        /**
         * `bool hasCustomImage = 7;`
         */
        public fun clearHasCustomImage() {
            _builder.clearHasCustomImage()
        }
    }
}
public inline fun com.pocketcasts.files.data.FileUploadRequest.copy(block: com.pocketcasts.files.data.FileUploadRequestKt.Dsl.() -> kotlin.Unit): com.pocketcasts.files.data.FileUploadRequest =
    com.pocketcasts.files.data.FileUploadRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val com.pocketcasts.files.data.FileUploadRequestOrBuilder.colourOrNull: com.google.protobuf.Int32Value?
    get() = if (hasColour()) getColour() else null
