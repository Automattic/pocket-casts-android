// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: api.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package com.pocketcasts.service.api

@kotlin.jvm.JvmName("-initializesubscriptionsPurchaseWebRequest")
public inline fun subscriptionsPurchaseWebRequest(block: com.pocketcasts.service.api.SubscriptionsPurchaseWebRequestKt.Dsl.() -> kotlin.Unit): com.pocketcasts.service.api.SubscriptionsPurchaseWebRequest =
    com.pocketcasts.service.api.SubscriptionsPurchaseWebRequestKt.Dsl._create(com.pocketcasts.service.api.SubscriptionsPurchaseWebRequest.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `api.SubscriptionsPurchaseWebRequest`
 */
public object SubscriptionsPurchaseWebRequestKt {
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @com.google.protobuf.kotlin.ProtoDslMarker
    public class Dsl private constructor(
        private val _builder: com.pocketcasts.service.api.SubscriptionsPurchaseWebRequest.Builder
    ) {
        public companion object {
            @kotlin.jvm.JvmSynthetic
            @kotlin.PublishedApi
            internal fun _create(builder: com.pocketcasts.service.api.SubscriptionsPurchaseWebRequest.Builder): Dsl = Dsl(builder)
        }

        @kotlin.jvm.JvmSynthetic
        @kotlin.PublishedApi
        internal fun _build(): com.pocketcasts.service.api.SubscriptionsPurchaseWebRequest = _builder.build()

        /**
         * `string transactionId = 1;`
         */
        public var transactionId: kotlin.String
            @JvmName("getTransactionId")
            get() = _builder.getTransactionId()
            @JvmName("setTransactionId")
            set(value) {
                _builder.setTransactionId(value)
            }
        /**
         * `string transactionId = 1;`
         */
        public fun clearTransactionId() {
            _builder.clearTransactionId()
        }

        /**
         * `string email = 2;`
         */
        public var email: kotlin.String
            @JvmName("getEmail")
            get() = _builder.getEmail()
            @JvmName("setEmail")
            set(value) {
                _builder.setEmail(value)
            }
        /**
         * `string email = 2;`
         */
        public fun clearEmail() {
            _builder.clearEmail()
        }

        /**
         * <code>int64 paddleUserId = 3;</code>
         */
        public var paddleUserId: kotlin.Long
            @JvmName("getPaddleUserId")
            get() = _builder.getPaddleUserId()
            @JvmName("setPaddleUserId")
            set(value) {
                _builder.setPaddleUserId(value)
            }
        /**
         * `int64 paddleUserId = 3;`
         */
        public fun clearPaddleUserId() {
            _builder.clearPaddleUserId()
        }

        /**
         * `string productId = 4;`
         */
        public var productId: kotlin.String
            @JvmName("getProductId")
            get() = _builder.getProductId()
            @JvmName("setProductId")
            set(value) {
                _builder.setProductId(value)
            }
        /**
         * `string productId = 4;`
         */
        public fun clearProductId() {
            _builder.clearProductId()
        }

        /**
         * <code>bool newsletterOptIn = 5;</code>
         */
        public var newsletterOptIn: kotlin.Boolean
            @JvmName("getNewsletterOptIn")
            get() = _builder.getNewsletterOptIn()
            @JvmName("setNewsletterOptIn")
            set(value) {
                _builder.setNewsletterOptIn(value)
            }
        /**
         * `bool newsletterOptIn = 5;`
         */
        public fun clearNewsletterOptIn() {
            _builder.clearNewsletterOptIn()
        }

        /**
         * <code>int64 subscriptionId = 6;</code>
         */
        public var subscriptionId: kotlin.Long
            @JvmName("getSubscriptionId")
            get() = _builder.getSubscriptionId()
            @JvmName("setSubscriptionId")
            set(value) {
                _builder.setSubscriptionId(value)
            }
        /**
         * `int64 subscriptionId = 6;`
         */
        public fun clearSubscriptionId() {
            _builder.clearSubscriptionId()
        }
    }
}
public inline fun com.pocketcasts.service.api.SubscriptionsPurchaseWebRequest.copy(block: com.pocketcasts.service.api.SubscriptionsPurchaseWebRequestKt.Dsl.() -> kotlin.Unit): com.pocketcasts.service.api.SubscriptionsPurchaseWebRequest =
    com.pocketcasts.service.api.SubscriptionsPurchaseWebRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()
