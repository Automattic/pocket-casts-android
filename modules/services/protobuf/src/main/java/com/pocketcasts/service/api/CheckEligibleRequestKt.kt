// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: api.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package com.pocketcasts.service.api

@kotlin.jvm.JvmName("-initializecheckEligibleRequest")
public inline fun checkEligibleRequest(block: com.pocketcasts.service.api.CheckEligibleRequestKt.Dsl.() -> kotlin.Unit): com.pocketcasts.service.api.CheckEligibleRequest =
    com.pocketcasts.service.api.CheckEligibleRequestKt.Dsl._create(com.pocketcasts.service.api.CheckEligibleRequest.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `api.CheckEligibleRequest`
 */
public object CheckEligibleRequestKt {
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @com.google.protobuf.kotlin.ProtoDslMarker
    public class Dsl private constructor(
        private val _builder: com.pocketcasts.service.api.CheckEligibleRequest.Builder
    ) {
        public companion object {
            @kotlin.jvm.JvmSynthetic
            @kotlin.PublishedApi
            internal fun _create(builder: com.pocketcasts.service.api.CheckEligibleRequest.Builder): Dsl = Dsl(builder)
        }

        @kotlin.jvm.JvmSynthetic
        @kotlin.PublishedApi
        internal fun _build(): com.pocketcasts.service.api.CheckEligibleRequest = _builder.build()

        /**
         * `.api.SubscriptionsPurchaseAndroidRequest android = 1;`
         */
        public var android: com.pocketcasts.service.api.SubscriptionsPurchaseAndroidRequest
            @JvmName("getAndroid")
            get() = _builder.getAndroid()
            @JvmName("setAndroid")
            set(value) {
                _builder.setAndroid(value)
            }
        /**
         * `.api.SubscriptionsPurchaseAndroidRequest android = 1;`
         */
        public fun clearAndroid() {
            _builder.clearAndroid()
        }
        /**
         * `.api.SubscriptionsPurchaseAndroidRequest android = 1;`
         * @return Whether the android field is set.
         */
        public fun hasAndroid(): kotlin.Boolean {
            return _builder.hasAndroid()
        }

        /**
         * `.api.SubscriptionsPurchaseAppleRequest apple = 2;`
         */
        public var apple: com.pocketcasts.service.api.SubscriptionsPurchaseAppleRequest
            @JvmName("getApple")
            get() = _builder.getApple()
            @JvmName("setApple")
            set(value) {
                _builder.setApple(value)
            }
        /**
         * `.api.SubscriptionsPurchaseAppleRequest apple = 2;`
         */
        public fun clearApple() {
            _builder.clearApple()
        }
        /**
         * `.api.SubscriptionsPurchaseAppleRequest apple = 2;`
         * @return Whether the apple field is set.
         */
        public fun hasApple(): kotlin.Boolean {
            return _builder.hasApple()
        }

        /**
         * `.api.SubscriptionsPurchaseWebRequest web = 3;`
         */
        public var web: com.pocketcasts.service.api.SubscriptionsPurchaseWebRequest
            @JvmName("getWeb")
            get() = _builder.getWeb()
            @JvmName("setWeb")
            set(value) {
                _builder.setWeb(value)
            }
        /**
         * `.api.SubscriptionsPurchaseWebRequest web = 3;`
         */
        public fun clearWeb() {
            _builder.clearWeb()
        }
        /**
         * `.api.SubscriptionsPurchaseWebRequest web = 3;`
         * @return Whether the web field is set.
         */
        public fun hasWeb(): kotlin.Boolean {
            return _builder.hasWeb()
        }
        public val storeReceiptCase: com.pocketcasts.service.api.CheckEligibleRequest.StoreReceiptCase
            @JvmName("getStoreReceiptCase")
            get() = _builder.getStoreReceiptCase()

        public fun clearStoreReceipt() {
            _builder.clearStoreReceipt()
        }
    }
}
public inline fun com.pocketcasts.service.api.CheckEligibleRequest.copy(block: com.pocketcasts.service.api.CheckEligibleRequestKt.Dsl.() -> kotlin.Unit): com.pocketcasts.service.api.CheckEligibleRequest =
    com.pocketcasts.service.api.CheckEligibleRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val com.pocketcasts.service.api.CheckEligibleRequestOrBuilder.androidOrNull: com.pocketcasts.service.api.SubscriptionsPurchaseAndroidRequest?
    get() = if (hasAndroid()) getAndroid() else null

public val com.pocketcasts.service.api.CheckEligibleRequestOrBuilder.appleOrNull: com.pocketcasts.service.api.SubscriptionsPurchaseAppleRequest?
    get() = if (hasApple()) getApple() else null

public val com.pocketcasts.service.api.CheckEligibleRequestOrBuilder.webOrNull: com.pocketcasts.service.api.SubscriptionsPurchaseWebRequest?
    get() = if (hasWeb()) getWeb() else null
