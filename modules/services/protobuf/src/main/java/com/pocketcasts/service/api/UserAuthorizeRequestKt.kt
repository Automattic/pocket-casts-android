// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: api.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package com.pocketcasts.service.api

@kotlin.jvm.JvmName("-initializeuserAuthorizeRequest")
public inline fun userAuthorizeRequest(block: com.pocketcasts.service.api.UserAuthorizeRequestKt.Dsl.() -> kotlin.Unit): com.pocketcasts.service.api.UserAuthorizeRequest =
    com.pocketcasts.service.api.UserAuthorizeRequestKt.Dsl._create(com.pocketcasts.service.api.UserAuthorizeRequest.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `api.UserAuthorizeRequest`
 */
public object UserAuthorizeRequestKt {
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @com.google.protobuf.kotlin.ProtoDslMarker
    public class Dsl private constructor(
        private val _builder: com.pocketcasts.service.api.UserAuthorizeRequest.Builder
    ) {
        public companion object {
            @kotlin.jvm.JvmSynthetic
            @kotlin.PublishedApi
            internal fun _create(builder: com.pocketcasts.service.api.UserAuthorizeRequest.Builder): Dsl = Dsl(builder)
        }

        @kotlin.jvm.JvmSynthetic
        @kotlin.PublishedApi
        internal fun _build(): com.pocketcasts.service.api.UserAuthorizeRequest = _builder.build()

        /**
         * `string email = 1;`
         */
        public var email: kotlin.String
            @JvmName("getEmail")
            get() = _builder.getEmail()
            @JvmName("setEmail")
            set(value) {
                _builder.setEmail(value)
            }
        /**
         * `string email = 1;`
         */
        public fun clearEmail() {
            _builder.clearEmail()
        }

        /**
         * `string password = 2;`
         */
        public var password: kotlin.String
            @JvmName("getPassword")
            get() = _builder.getPassword()
            @JvmName("setPassword")
            set(value) {
                _builder.setPassword(value)
            }
        /**
         * `string password = 2;`
         */
        public fun clearPassword() {
            _builder.clearPassword()
        }

        /**
         * `string response_type = 3;`
         */
        public var responseType: kotlin.String
            @JvmName("getResponseType")
            get() = _builder.getResponseType()
            @JvmName("setResponseType")
            set(value) {
                _builder.setResponseType(value)
            }
        /**
         * `string response_type = 3;`
         */
        public fun clearResponseType() {
            _builder.clearResponseType()
        }

        /**
         * `string client_id = 4;`
         */
        public var clientId: kotlin.String
            @JvmName("getClientId")
            get() = _builder.getClientId()
            @JvmName("setClientId")
            set(value) {
                _builder.setClientId(value)
            }
        /**
         * `string client_id = 4;`
         */
        public fun clearClientId() {
            _builder.clearClientId()
        }

        /**
         * `string redirect_uri = 5;`
         */
        public var redirectUri: kotlin.String
            @JvmName("getRedirectUri")
            get() = _builder.getRedirectUri()
            @JvmName("setRedirectUri")
            set(value) {
                _builder.setRedirectUri(value)
            }
        /**
         * `string redirect_uri = 5;`
         */
        public fun clearRedirectUri() {
            _builder.clearRedirectUri()
        }

        /**
         * `string scope = 6;`
         */
        public var scope: kotlin.String
            @JvmName("getScope")
            get() = _builder.getScope()
            @JvmName("setScope")
            set(value) {
                _builder.setScope(value)
            }
        /**
         * `string scope = 6;`
         */
        public fun clearScope() {
            _builder.clearScope()
        }

        /**
         * `string state = 7;`
         */
        public var state: kotlin.String
            @JvmName("getState")
            get() = _builder.getState()
            @JvmName("setState")
            set(value) {
                _builder.setState(value)
            }
        /**
         * `string state = 7;`
         */
        public fun clearState() {
            _builder.clearState()
        }
    }
}
public inline fun com.pocketcasts.service.api.UserAuthorizeRequest.copy(block: com.pocketcasts.service.api.UserAuthorizeRequestKt.Dsl.() -> kotlin.Unit): com.pocketcasts.service.api.UserAuthorizeRequest =
    com.pocketcasts.service.api.UserAuthorizeRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()
