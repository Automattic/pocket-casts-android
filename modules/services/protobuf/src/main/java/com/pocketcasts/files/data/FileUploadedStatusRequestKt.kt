// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: files.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package com.pocketcasts.files.data

@kotlin.jvm.JvmName("-initializefileUploadedStatusRequest")
public inline fun fileUploadedStatusRequest(block: com.pocketcasts.files.data.FileUploadedStatusRequestKt.Dsl.() -> kotlin.Unit): com.pocketcasts.files.data.FileUploadedStatusRequest =
    com.pocketcasts.files.data.FileUploadedStatusRequestKt.Dsl._create(com.pocketcasts.files.data.FileUploadedStatusRequest.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `files.FileUploadedStatusRequest`
 */
public object FileUploadedStatusRequestKt {
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @com.google.protobuf.kotlin.ProtoDslMarker
    public class Dsl private constructor(
        private val _builder: com.pocketcasts.files.data.FileUploadedStatusRequest.Builder
    ) {
        public companion object {
            @kotlin.jvm.JvmSynthetic
            @kotlin.PublishedApi
            internal fun _create(builder: com.pocketcasts.files.data.FileUploadedStatusRequest.Builder): Dsl = Dsl(builder)
        }

        @kotlin.jvm.JvmSynthetic
        @kotlin.PublishedApi
        internal fun _build(): com.pocketcasts.files.data.FileUploadedStatusRequest = _builder.build()

        /**
         * `string Type = 1;`
         */
        public var type: kotlin.String
            @JvmName("getType")
            get() = _builder.getType()
            @JvmName("setType")
            set(value) {
                _builder.setType(value)
            }
        /**
         * `string Type = 1;`
         */
        public fun clearType() {
            _builder.clearType()
        }

        /**
         * `string MessageId = 2;`
         */
        public var messageId: kotlin.String
            @JvmName("getMessageId")
            get() = _builder.getMessageId()
            @JvmName("setMessageId")
            set(value) {
                _builder.setMessageId(value)
            }
        /**
         * `string MessageId = 2;`
         */
        public fun clearMessageId() {
            _builder.clearMessageId()
        }

        /**
         * `string TopicArn = 3;`
         */
        public var topicArn: kotlin.String
            @JvmName("getTopicArn")
            get() = _builder.getTopicArn()
            @JvmName("setTopicArn")
            set(value) {
                _builder.setTopicArn(value)
            }
        /**
         * `string TopicArn = 3;`
         */
        public fun clearTopicArn() {
            _builder.clearTopicArn()
        }

        /**
         * `string Subject = 4;`
         */
        public var subject: kotlin.String
            @JvmName("getSubject")
            get() = _builder.getSubject()
            @JvmName("setSubject")
            set(value) {
                _builder.setSubject(value)
            }
        /**
         * `string Subject = 4;`
         */
        public fun clearSubject() {
            _builder.clearSubject()
        }

        /**
         * `string Token = 5;`
         */
        public var token: kotlin.String
            @JvmName("getToken")
            get() = _builder.getToken()
            @JvmName("setToken")
            set(value) {
                _builder.setToken(value)
            }
        /**
         * `string Token = 5;`
         */
        public fun clearToken() {
            _builder.clearToken()
        }

        /**
         * `string Message = 6;`
         */
        public var message: kotlin.String
            @JvmName("getMessage")
            get() = _builder.getMessage()
            @JvmName("setMessage")
            set(value) {
                _builder.setMessage(value)
            }
        /**
         * `string Message = 6;`
         */
        public fun clearMessage() {
            _builder.clearMessage()
        }

        /**
         * `string SubscribeURL = 7;`
         */
        public var subscribeURL: kotlin.String
            @JvmName("getSubscribeURL")
            get() = _builder.getSubscribeURL()
            @JvmName("setSubscribeURL")
            set(value) {
                _builder.setSubscribeURL(value)
            }
        /**
         * `string SubscribeURL = 7;`
         */
        public fun clearSubscribeURL() {
            _builder.clearSubscribeURL()
        }

        /**
         * `string Timestamp = 8;`
         */
        public var timestamp: kotlin.String
            @JvmName("getTimestamp")
            get() = _builder.getTimestamp()
            @JvmName("setTimestamp")
            set(value) {
                _builder.setTimestamp(value)
            }
        /**
         * `string Timestamp = 8;`
         */
        public fun clearTimestamp() {
            _builder.clearTimestamp()
        }

        /**
         * `string SignatureVersion = 9;`
         */
        public var signatureVersion: kotlin.String
            @JvmName("getSignatureVersion")
            get() = _builder.getSignatureVersion()
            @JvmName("setSignatureVersion")
            set(value) {
                _builder.setSignatureVersion(value)
            }
        /**
         * `string SignatureVersion = 9;`
         */
        public fun clearSignatureVersion() {
            _builder.clearSignatureVersion()
        }

        /**
         * `string Signature = 10;`
         */
        public var signature: kotlin.String
            @JvmName("getSignature")
            get() = _builder.getSignature()
            @JvmName("setSignature")
            set(value) {
                _builder.setSignature(value)
            }
        /**
         * `string Signature = 10;`
         */
        public fun clearSignature() {
            _builder.clearSignature()
        }

        /**
         * `string SigningCertURL = 11;`
         */
        public var signingCertURL: kotlin.String
            @JvmName("getSigningCertURL")
            get() = _builder.getSigningCertURL()
            @JvmName("setSigningCertURL")
            set(value) {
                _builder.setSigningCertURL(value)
            }
        /**
         * `string SigningCertURL = 11;`
         */
        public fun clearSigningCertURL() {
            _builder.clearSigningCertURL()
        }

        /**
         * `string UnsubscribeURL = 12;`
         */
        public var unsubscribeURL: kotlin.String
            @JvmName("getUnsubscribeURL")
            get() = _builder.getUnsubscribeURL()
            @JvmName("setUnsubscribeURL")
            set(value) {
                _builder.setUnsubscribeURL(value)
            }
        /**
         * `string UnsubscribeURL = 12;`
         */
        public fun clearUnsubscribeURL() {
            _builder.clearUnsubscribeURL()
        }
    }
}
public inline fun com.pocketcasts.files.data.FileUploadedStatusRequest.copy(block: com.pocketcasts.files.data.FileUploadedStatusRequestKt.Dsl.() -> kotlin.Unit): com.pocketcasts.files.data.FileUploadedStatusRequest =
    com.pocketcasts.files.data.FileUploadedStatusRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()
